<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>147, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAABILAAASCwAAAAAAAAAA
        AAAAAO4SAADuHAAA7gkAAO4AAADuAAICeQAEBAQABgYGAAUFBQAGBgYABwcHAAcHBwAHBwcABwcHAAcH
        BwAHBwcAAADuHAAv7kcAGO5mAADuVgAA7hUCAnkABAQEAAcHBz4GBgaJBwcHZwcHBwAHBwcABwcHAAcH
        BwAHBwcABwcHAAAA7gkAGO5mALvuhgB17qMAGO66AwNkbwQEBIowNTCnprem/woKCogKCgoACgoKAAoK
        CgAKCgoACgoKAAoKCgAAAO4AAADuVQB27qMAu+67AmyJoAQEBIqyw7Lxd3d3/6SxpP8PDw+GDw8PAA8P
        DwAPDw8ADw8PAA8PDwAPDw8AAADuAAAA7hUAGO67AW+NmQQEBIamuKb/prim/7LDsvF3d3f/EBAQhR4e
        HgAeHh4AHh4eAB4eHgAeHh4AHh4eAAAAdwAAAHcAAABmYQEBAW29wb3/l6OX/5Wnlf+muKb/ssOy8QQE
        BIonJyc5KCgoACgoKAAoKCgAKCgoACgoKAAVFRUAFBQUAAEBAWbV1dX/tra2/6+wr/+Xo5f/laeV/5am
        lv/l19fwHx8fgScnJzkoKCgAKCgoACgoKAAoKCgAKSkpACkpKThAQECXmpqa/9XV1f+2trb/r7Cv/4iT
        iP/Yxsb/49HR/+XX1/AfHx+BJycnOSgoKAAoKCgAKCgoAC8vLwAvLy93w8PD/62trf+ampr/1dXV/6Sk
        pP/c2tr/yri1/7eMfv+5joD/1MC98B8fH4EnJyc5KCgoACgoKAAzMzMANDQ0WDU1NXU1NTV1KSkpcQEB
        AWb7+vr/4eHh/4lrYv/MmYj/zJmI/4pqYf/l19fwHx8fgScnJzkoKCgAMzMzADU1NQA3NzcANzc3ADc3
        NwAAAAAvAAAAZvv6+v9cS0X/mWZV/5lmVf9ZR0H/49HR/+XX1/AfHx+BJycnOTMzMwA1NTUANzc3ADc3
        NwA3NzcAAAAAAAAAAC8AAABmzs3M/ykmJf//3cz/oJaW/9jGxv/NvLz/5dfX8AEBz7QzMzMANTU1ADc3
        NwA3NzcANzc3AAAAAAAAAAAAAAAALwAAAGb7+vr/v7+//8vKyv/AtbX/7Nvb/ysrv/8BAbu8MzMzADU1
        NQA3NzcANzc3ADc3NwAAAAAAAAAAAAAAAAAAAAAvAAAAZvv6+v/Kysr/7ufn/xYWrf9KSuD/AACoxDMz
        MwA1NTUANzc3ADc3NwArKysAAAAAAAAAAAAAAAAAAAAAAAAAAC8AAABm+/r6/1FR2f96eu7/WVno/wAA
        mcoaGhoAFBQUAA0NDQANDQ0ACgoKAAUFBQACAgIAAAAAAAAAAAAAAAAAAAAALwEB3bMAAMjFAAC/zAAA
        tMwAAJpmH/8AAAY/AAAAPwAAgD8AAIA/AADAHwAAwA8AAIAHAACAAwAAgAEAAPgAAAD8AAAA/gAAAP8A
        AAD/gAAA/8AAAA==
</value>
  </data>
</root>